extend type Query {
    designs: [Design!]! @middleware(checks: ["auth:api"]) @all
    design(id: ID @eq): Design @find
}


type Mutation {
    createDesign(
        name: String @rules(apply: ["required"])
        number: String @rules(apply: ["required"])
        price: String
        image: String
        owner_id: String #TODO: Attach the user who created the Design
    ): Design @create
    
    updateDesign(
        id: ID @rules(apply: ["required"])
        name: String @rules(apply: ["required"])
        number: String @rules(apply: ["required"])
        price: String
        image: String
    ): Design @update
    
    deleteDesign(
        id: ID @rules(apply: ["required"])
    ): Design @delete

}

type Design {
    id: ID!
    name: String!
    number: String
    price: String
    image: String
    categories: [Category] @belongsToMany
    owner: User @belongsTo
}