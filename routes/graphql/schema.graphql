

"A datetime string with format 'Y-m-d H:i:s', e.g. '2018-01-01 13:00:00'."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format 'Y-m-d', e.g. '2011-05-23'."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    me: User @field(resolver: "UserQuery@me")

    users: [User!]! @middleware(checks: ["auth:api"]) @paginate(type: "paginator" model: "App\\User")
    user(id: ID @eq): User @find(model: "App\\User")

    designs: [Design!]! @all(model: "App\\Design")
    design(id: ID @eq): Design @find
}

type Mutation {
    createUser(
        name: String @rules(apply: ["required"])
        email: String @rules(apply: ["required", "email", "unique:users,email"])
    ): User @create(model: "App\\User")
    updateUser(
        id: ID @rules(apply: ["required"])
        name: String
        email: String @rules(apply: ["email"])
    ): User @update(model: "App\\User")
    deleteUser(
        id: ID @rules(apply: ["required"])
    ): User @delete(model: "App\\User")

    login(
       input: LoginInput
    ): AuthPayload! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\src\\GraphQL\\Mutations\\Login@resolve")
   
    refreshToken(
       input: RefreshTokenInput
    ): AuthPayload! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\src\\GraphQL\\Mutations\\RefreshToken@resolve")
    
    logout: LogoutResponse! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\src\\GraphQL\\Mutations\\Logout@resolve")
   
    forgotPassword(
       input: ForgotPasswordInput!
    ): ForgotPasswordResponse! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\src\\GraphQL\\Mutations\\ForgotPassword@resolve")
   
    updateForgottenPassword(
       input: NewPasswordWithCodeInput
    ): ForgotPasswordResponse! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\src\\GraphQL\\Mutations\\ResetPassword@resolve")
   
    register(
       input: RegisterInput @spread
    ): AuthPayload! @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\src\\GraphQL\\Mutations\\Register@resolve")
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    designs: [Design] @hasMany
}

type Design {
    id: ID!
    name: String!
    number: String
    image: String
    owner: User! @belongsTo
}

type AuthPayload {
   access_token: String!
   refresh_token: String!
   expires_in: Int!
   token_type: String!
   user: User!
}

type LogoutResponse {
   status: String!
   message: String
}

type ForgotPasswordResponse {
   status: String!
   message: String
}

input ForgotPasswordInput {
   email: String!
}

input NewPasswordWithCodeInput {
   email: String!
   token: String!
   password: String!
   password_confirmation: String!
}

input LoginInput {
   username: String!
   password: String!
}

input RefreshTokenInput {
   refresh_token: String
}

input RegisterInput {
   name: String! @rules(apply: ["required", "string"])
   email: String! @rules(apply: ["required", "email"])
   password: String! @rules(apply: ["required", "confirmed", "min:8"])
   password_confirmation: String!
}
